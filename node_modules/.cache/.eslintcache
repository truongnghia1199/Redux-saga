[{"/home/nghiatt/React/git/redux-saga/src/index.js":"1","/home/nghiatt/React/git/redux-saga/src/reportWebVitals.js":"2","/home/nghiatt/React/git/redux-saga/src/App.js":"3","/home/nghiatt/React/git/redux-saga/src/redux/store.js":"4","/home/nghiatt/React/git/redux-saga/src/components/Header.js":"5","/home/nghiatt/React/git/redux-saga/src/pages/AddEditUser.js":"6","/home/nghiatt/React/git/redux-saga/src/pages/Home.js":"7","/home/nghiatt/React/git/redux-saga/src/redux/rootReducer.js":"8","/home/nghiatt/React/git/redux-saga/src/redux/actions.js":"9","/home/nghiatt/React/git/redux-saga/src/redux/reducer.js":"10","/home/nghiatt/React/git/redux-saga/src/redux/actionTypes.js":"11","/home/nghiatt/React/git/redux-saga/src/redux/usersagas.js":"12","/home/nghiatt/React/git/redux-saga/src/redux/api.js":"13"},{"size":669,"mtime":1634789272218,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1634722300660,"results":"16","hashOfConfig":"15"},{"size":699,"mtime":1634886693649,"results":"17","hashOfConfig":"15"},{"size":505,"mtime":1634791997906,"results":"18","hashOfConfig":"15"},{"size":1700,"mtime":1634886777508,"results":"19","hashOfConfig":"15"},{"size":4349,"mtime":1634886437142,"results":"20","hashOfConfig":"15"},{"size":2714,"mtime":1634886589325,"results":"21","hashOfConfig":"15"},{"size":171,"mtime":1634789191567,"results":"22","hashOfConfig":"15"},{"size":1217,"mtime":1634884704316,"results":"23","hashOfConfig":"15"},{"size":1114,"mtime":1634884591340,"results":"24","hashOfConfig":"15"},{"size":630,"mtime":1634880984591,"results":"25","hashOfConfig":"15"},{"size":2226,"mtime":1634886352159,"results":"26","hashOfConfig":"15"},{"size":457,"mtime":1634884674964,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"5c8xuw",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/nghiatt/React/git/redux-saga/src/index.js",[],["58","59"],"/home/nghiatt/React/git/redux-saga/src/reportWebVitals.js",[],"/home/nghiatt/React/git/redux-saga/src/App.js",[],"/home/nghiatt/React/git/redux-saga/src/redux/store.js",[],"/home/nghiatt/React/git/redux-saga/src/components/Header.js",[],"/home/nghiatt/React/git/redux-saga/src/pages/AddEditUser.js",["60"],"import { MDBBtn, MDBInput, MDBValidation } from \"mdb-react-ui-kit\"\nimport React, { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useHistory, useParams } from \"react-router\"\nimport { v4 as uuidv4 } from \"uuid\"\nimport { addUserStart, updateUserStart } from \"../redux/actions\"\nimport { toast } from 'react-toastify'\n\nconst initialState = {\n  id: uuidv4(),\n  firstName: \"\",\n  lastName: \"\",\n  gender: \"\",\n  email: \"\",\n  address: \"\",\n  phone: \"\",\n  role: \"\",\n}\n\nconst AddEditUser = () => {\n  const [fromValue, setFromValue] = useState(initialState)\n  const [editMode, setEditMode] = useState(false)\n  const {users} = useSelector(state => state.data)\n  const { firstName, lastName, gender, email, address, phone, role } = fromValue\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const {id} = useParams()\n\n  useEffect(() => {\n    if (id) {\n      setEditMode(true)\n      const singleUser = users.find(item => item.id === id)\n      setFromValue({...singleUser})\n    } else {\n      setEditMode(false)\n      setFromValue({...initialState})\n    }\n  }, [id])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (firstName && lastName && gender && email && address && phone && role) {\n      if (!editMode) {\n        dispatch(addUserStart(fromValue))\n        toast.success(\"Added Successfully\")\n        setTimeout(() => history.push(\"/\"), 200)\n      } else {\n        dispatch(updateUserStart({id, fromValue}))\n        setEditMode(false)\n        toast.success(\"Updated Successfully\")\n        setTimeout(() => history.push(\"/\"), 200)\n      }\n    }\n  } \n\n  const onInputChange = (e) => {\n    let { name, value } = e.target;\n    setFromValue({ ...fromValue, [name]: value })\n  }\n\n\n  return (\n    <MDBValidation\n      className=\"row g-3\"\n      style={{ marginTop: \"100px\" }}\n      noValidate\n      onSubmit={handleSubmit}\n    >\n      <p className=\"fs-2 fw-bold\">{!editMode ? \"Add User\" : \"Edit User\"}</p>\n      <div\n        style={{\n          margin: \"auto\",\n          padding: \"15px\",\n          maxWidth: \"400px\",\n          alignContent: \"center\",\n        }}\n      >\n        <MDBInput\n          value={firstName || \"\"}\n          name=\"firstName\"\n          type=\"text\"\n          onChange={onInputChange}\n          required\n          label=\"First Name\"\n          validation=\"Please provide the first name\"\n          invalid\n        />\n        <br />\n        <MDBInput\n          value={lastName || \"\"}\n          name=\"lastName\"\n          type=\"text\"\n          onChange={onInputChange}\n          required\n          label=\"Last Name\"\n          validation=\"Please provide the last name\"\n          invalid\n        />\n        <br />\n        <MDBInput\n          value={gender || \"\"}\n          name=\"gender\"\n          type=\"text\"\n          onChange={onInputChange}\n          required\n          label=\"Gender\"\n          validation=\"Please provide gender\"\n          invalid\n        />\n        <br />\n        <MDBInput\n          value={email || \"\"}\n          name=\"email\"\n          type=\"email\"\n          onChange={onInputChange}\n          required\n          label=\"Email\"\n          validation=\"Please provide email\"\n          invalid\n        />\n        <br />\n        <MDBInput\n          value={address || \"\"}\n          name=\"address\"\n          type=\"text\"\n          onChange={onInputChange}\n          required\n          label=\"Address\"\n          validation=\"Please provide address\"\n          invalid\n        />\n        <br />\n        <MDBInput\n          value={phone || \"\"}\n          name=\"phone\"\n          type=\"text\"\n          onChange={onInputChange}\n          required\n          label=\"Phone\"\n          validation=\"Please provide phone\"\n          invalid\n        />\n        <br />\n        <MDBInput\n          value={role || \"\"}\n          name=\"role\"\n          type=\"text\"\n          onChange={onInputChange}\n          required\n          label=\"Role\"\n          validation=\"Please provide role\"\n          invalid\n        />\n        <br />\n        <div className=\"col-12\">\n          <MDBBtn style={{ marginRight: \"10px\" }} type=\"submit\">\n            {!editMode ? \"Add\" : \"Uppdate\"}\n          </MDBBtn>\n          <MDBBtn onClick={() => history.push(\"/\")} color=\"danger\">\n            Go Back\n          </MDBBtn>\n        </div>\n      </div>\n    </MDBValidation>\n  );\n};\n\nexport default AddEditUser;\n","/home/nghiatt/React/git/redux-saga/src/pages/Home.js",["61"],"import { MDBBtn, MDBIcon, MDBSpinner, MDBTable, MDBTableBody, MDBTableHead, MDBTooltip } from 'mdb-react-ui-kit';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { deleteUserStart, loadUsersStart } from '../redux/actions';\n\nconst Home = () => {\n  const dispatch = useDispatch()\n  const { users, loading, error } = useSelector(state => state.data)\n\n  useEffect(() => {\n    dispatch(loadUsersStart())\n  }, [])\n\n  useEffect(() => error && toast.error(error), [error])\n\n  if(loading) {\n    return (\n      <MDBSpinner style={{marginTop: '150px'}} role='status'>\n          <span className=\"visually-hidden\">Loading...</span>\n      </MDBSpinner>\n    )\n  }\n\n  const handleDelete = (id) => {\n    if(window.confirm(\"Are you sure that you wanted to delete?\")) {\n      dispatch(deleteUserStart(id))\n      toast.success(\"User Deleted Successfully\")\n    }\n  }\n  return (\n    <div className=\"container\" style={{ marginTop: \"150px\" }}>\n      <MDBTable>\n        <MDBTableHead dark>\n          <tr>\n            <th scope=\"col\">First Name</th>\n            <th scope=\"col\">Last Name</th>\n            <th scope=\"col\">Gender</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Address</th>\n            <th scope=\"col\">Phone</th>\n            <th scope=\"col\">Role</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </MDBTableHead>\n          {users && users.map((item) => (\n            <MDBTableBody>\n              <tr>\n                <td>{item.firstName}</td>\n                <td>{item.lastName}</td>\n                <td>{item.gender}</td>\n                <td>{item.email}</td>\n                <td>{item.address}</td>\n                <td>{item.phone}</td>\n                <td>{item.role}</td>\n                <td>\n                  <MDBBtn className=\"m-1\" tag=\"a\" color=\"none\" onClick={() => handleDelete(item.id)}>\n                    <MDBTooltip title=\"Delete\" tag=\"a\">\n                      <MDBIcon fas icon=\"trash\" style={{ color: \"#dd4b39\"}}\n                      size=\"lg\"\n                    />\n                    </MDBTooltip>\n                  </MDBBtn>{\" \"}\n                  <Link to={`/editUser/${item.id}`}>\n                    <MDBTooltip title=\"Edit\" tag=\"a\">\n                      <MDBIcon \n                      fas icon=\"pen\" \n                      size=\"lg\"\n                      style={{ marginBottom: \"10px\" }}\n                    />\n                    </MDBTooltip>{\" \"}\n                  </Link>\n                </td>\n              </tr>\n            </MDBTableBody>\n          ))}\n      </MDBTable>\n    </div>\n  )\n}\n\nexport default Home\n","/home/nghiatt/React/git/redux-saga/src/redux/rootReducer.js",[],"/home/nghiatt/React/git/redux-saga/src/redux/actions.js",[],"/home/nghiatt/React/git/redux-saga/src/redux/reducer.js",["62"],"import * as types from \"./actionTypes\"\n\nconst initialState = {\n  users: [],\n  loading: false,\n  error: null\n}\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_START:\n    case types.ADD_USER_START:\n    case types.DELETE_USER_START:\n    case types.UPDATE_USER_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case types.LOAD_USERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: action.payload\n      }\n    case types.ADD_USER_SUCCESS:\n    case types.UPDATE_USER_ERROR:\n      return {\n        ...state,\n        loading: false\n      }\n    case types.DELETE_USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: state.users.filter(item => item.id !== action.payload)\n      }\n    case types.LOAD_USERS_ERROR:\n    case types.ADD_USER_ERROR:\n    case types.DELETE_USER_ERROR:\n    case types.UPDATE_USER_ERROR:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default usersReducer","/home/nghiatt/React/git/redux-saga/src/redux/actionTypes.js",[],"/home/nghiatt/React/git/redux-saga/src/redux/usersagas.js",[],"/home/nghiatt/React/git/redux-saga/src/redux/api.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":38,"column":6,"nodeType":"69","endLine":38,"endColumn":10,"suggestions":"70"},{"ruleId":"67","severity":1,"message":"71","line":14,"column":6,"nodeType":"69","endLine":14,"endColumn":8,"suggestions":"72"},{"ruleId":"73","severity":1,"message":"74","line":40,"column":5,"nodeType":"75","messageId":"76","endLine":45,"endColumn":8},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'users'. Either include it or remove the dependency array.","ArrayExpression",["79"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["80"],"no-duplicate-case","Duplicate case label.","SwitchCase","unexpected","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"Update the dependencies array to be: [id, users]",{"range":"85","text":"86"},"Update the dependencies array to be: [dispatch]",{"range":"87","text":"88"},[1111,1115],"[id, users]",[542,544],"[dispatch]"]